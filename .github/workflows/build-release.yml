name: Build and release

on: [push]

env:
  PROJECT_ID: ${{secrets.PROJECT_ID}}
  GKE_CLUSTER: ${{secrets.GKE_CLUSTER}}
  GKE_ZONE: ${{secrets.GKE_ZONE}}
  DEPLOYMENT_NAME: monumental-trees
  IMAGE: monumental-trees
  SPRING_PROFILE_ACTIVE: ${{secrets.SPRING_PROFILE_ACTIVE}}
  SPRING_DATASOURCE_URL: ${{secrets.SPRING_DATASOURCE_URL}}
  SPRING_DATASOURCE_USERNAME: ${{secrets.SPRING_DATASOURCE_USERNAME}}
  SPRING_DATASOURCE_PASSWORD: ${{secrets.SPRING_DATASOURCE_PASSWORD}}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Build with Gradle
        run: |-
          ./gradlew build
          ./gradlew jar
      - name: Upload application's JAR
        uses: actions/upload-artifact@v2
        with:
          name: jar
          path: ./build/libs/monumental.trees-0.0.1-SNAPSHOT.jar

  release:
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup gcloud CLI
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.PROJECT_ID }}

      - name: Configure Docker registry
        run: |-
          gcloud --quiet auth configure-docker

      - name:  GKE credentials
        run: |-
          gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

      - name: Download application's JAR
        uses: actions/download-artifact@v2
        with:
          name: jar
          path: ./build/libs

      - name: Build
        run: |-
          docker build --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" .

      - name: Publish
        run: |-
          docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

      - name: Deploy
        run: |-
          sudo apt-get install -y gettext
          envsubst < deployment.yml | kubectl apply -f -
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide